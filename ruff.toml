# Ruff configuration for GIMAN Pipeline
# Following the ML workflow and general coding standards

# Basic settings
line-length = 79
target-version = "py310"
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".mypy_cache",
    ".pytest_cache",
    "build",
    "dist",
    "*.egg-info",
]

# Enable specific rule sets
[lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # Pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "PIE",    # flake8-pie
    "SIM",    # flake8-simplify
    "RET",    # flake8-return
]

ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D107",   # Missing docstring in __init__
    "E501",   # Line too long (handled by line-length)
]

# Per-file ignores
[lint.per-file-ignores]
"tests/*" = ["D103", "D102"]
"notebooks/*" = ["D100", "D103"]
"__init__.py" = ["D104"]

# Specific rule configurations
[lint.pydocstyle]
convention = "google"

[lint.isort]
known-first-party = ["giman_pipeline"]
force-single-line = false
lines-after-imports = 2